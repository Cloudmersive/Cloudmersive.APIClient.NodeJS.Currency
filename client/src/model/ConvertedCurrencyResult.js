/**
 * currencyapi
 * The currency APIs help you retrieve exchange rates and convert prices between currencies easily.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.CloudmersiveCurrencyApiClient) {
      root.CloudmersiveCurrencyApiClient = {};
    }
    root.CloudmersiveCurrencyApiClient.ConvertedCurrencyResult = factory(root.CloudmersiveCurrencyApiClient.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The ConvertedCurrencyResult model module.
   * @module model/ConvertedCurrencyResult
   * @version 1.2.0
   */

  /**
   * Constructs a new <code>ConvertedCurrencyResult</code>.
   * Result of performing a Convert Currency operation
   * @alias module:model/ConvertedCurrencyResult
   * @class
   */
  var exports = function() {
    var _this = this;





  };

  /**
   * Constructs a <code>ConvertedCurrencyResult</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ConvertedCurrencyResult} obj Optional instance to populate.
   * @return {module:model/ConvertedCurrencyResult} The populated <code>ConvertedCurrencyResult</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('ConvertedPrice')) {
        obj['ConvertedPrice'] = ApiClient.convertToType(data['ConvertedPrice'], 'Number');
      }
      if (data.hasOwnProperty('ISOCurrencyCode')) {
        obj['ISOCurrencyCode'] = ApiClient.convertToType(data['ISOCurrencyCode'], 'String');
      }
      if (data.hasOwnProperty('CurrencySymbol')) {
        obj['CurrencySymbol'] = ApiClient.convertToType(data['CurrencySymbol'], 'String');
      }
      if (data.hasOwnProperty('FormattedPriceAsString')) {
        obj['FormattedPriceAsString'] = ApiClient.convertToType(data['FormattedPriceAsString'], 'String');
      }
    }
    return obj;
  }

  /**
   * The converted price in the destination currency
   * @member {Number} ConvertedPrice
   */
  exports.prototype['ConvertedPrice'] = undefined;
  /**
   * ISO 4217 currency three-letter code of destination price
   * @member {String} ISOCurrencyCode
   */
  exports.prototype['ISOCurrencyCode'] = undefined;
  /**
   * Destination currency symbol
   * @member {String} CurrencySymbol
   */
  exports.prototype['CurrencySymbol'] = undefined;
  /**
   * Formatted price in the destination currency as a string
   * @member {String} FormattedPriceAsString
   */
  exports.prototype['FormattedPriceAsString'] = undefined;



  return exports;
}));


